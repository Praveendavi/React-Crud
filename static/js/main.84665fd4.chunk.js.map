{"version":3,"sources":["components/pages/Home.js","components/pages/About.js","layouts/Navbar.js","users/AddUser.js","users/EditUser.js","users/User.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","user","setUser","useEffect","loadUsers","a","axios","get","result","data","DeleteUser","id","delete","className","map","index","name","username","email","to","onClick","About","Navbar","exact","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","AddUser","history","useHistory","onInputChange","e","target","value","onSubmit","preventDefault","post","push","onChange","EditUser","useParams","put","User","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84665fd4.chunk.js","sourcesContent":["import React,{ useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n\r\n    const [user,setUser] = useState([])\r\n\r\n    useEffect(() =>{\r\n        loadUsers()\r\n    },[])\r\n\r\n    const loadUsers = async () =>{\r\n        const result = await axios.get('http://localhost:3001/users', user)\r\n        setUser(result.data)\r\n    }\r\n\r\n    const DeleteUser = async id =>{\r\n        await axios.delete(`http://localhost:3001/users/${id}`, user)\r\n        loadUsers()\r\n    }\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead className=\"thead bg-light\">\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                        <th>Control</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"tbody\">\r\n                {\r\n                    user.map((user,index) =>{\r\n                        return(\r\n                            <tr>\r\n                                <th>{ index + 1 }</th>\r\n                                <td>{ user.name }</td>\r\n                                <td>{ user.username }</td>\r\n                                <td>{ user.email }</td>\r\n                                <td>\r\n                                    <Link className=\"btn btn-primary mr-2\" to={`/user/${user.id}`}>View</Link>\r\n                                    <Link className=\"btn btn-secondary mr-2\" to={`/user/edit/${user.id}`} >Edit</Link>\r\n                                    <Link className=\"btn btn-danger mr-2\" onClick={() => DeleteUser(user.id)} >Delete</Link>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            this is about page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink exact className=\"navbar-brand\" to=\"/\">Pixelphant</NavLink>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n                <NavLink exact className=\"nav-link\" to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink exact className=\"nav-link\" to=\"/about\">About</NavLink>\r\n            </li>\r\n            </ul>\r\n            <Link className=\"btn btn-secondary\" to=\"/user/add\" >+ Add User</Link>\r\n        </div>\r\n        </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AddUser = () => {\r\n\r\n    const [user,setUser] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:''\r\n    })\r\n\r\n    let history = useHistory()\r\n\r\n   const onInputChange = e =>{\r\n       setUser({...user,[e.target.name]:[e.target.value]})\r\n   }\r\n    const onSubmit = async e =>{\r\n        e.preventDefault()\r\n        await axios.post('http://localhost:3001/users', user)\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n           <div className=\"col-6 mx-auto\">\r\n           <form className=\"form\" onSubmit={e => onSubmit(e)} >\r\n            <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={user.name} onChange={e  => onInputChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={e => onInputChange(e)}  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" name=\"email\" value={user.email} onChange={e => onInputChange(e)}  />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Add User</button>\r\n           </form>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nconst EditUser = () => {\r\n\r\n    const [user,setUser] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:''\r\n    })\r\n    const { id } = useParams()\r\n\r\n    let history = useHistory()\r\n\r\n   const onInputChange = e =>{\r\n       setUser({...user,[e.target.name]:[e.target.value]})\r\n   }\r\n    const onSubmit = async e =>{\r\n        e.preventDefault()\r\n        await axios.put(`http://localhost:3001/users/${id}`, user)\r\n        history.push('/')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        loadUsers()\r\n    },[])\r\n\r\n    const loadUsers = async () =>{\r\n        const result = await axios.get(`http://localhost:3001/users/${id}`, user)\r\n        setUser(result.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n           <div className=\"col-6 mx-auto\">\r\n           <form className=\"form\" onSubmit={e => onSubmit(e)} >\r\n            <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={user.name} onChange={e  => onInputChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={e => onInputChange(e)}  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" name=\"email\" value={user.email} onChange={e => onInputChange(e)}  />\r\n                </div>\r\n                <button className=\"btn btn-warning\">Update User</button>\r\n           </form>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {  useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = () => {\r\n\r\n    const [user,setUser] = useState({\r\n        name:'',\r\n        username:'',\r\n        email:''\r\n    })\r\n    const { id } = useParams()\r\n\r\n    useEffect(() =>{\r\n        loadUsers()\r\n    },[])\r\n\r\n    const loadUsers = async () =>{\r\n        const result = await axios.get(`http://localhost:3001/users/${id}`, user)\r\n        setUser(result.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n           <div className=\"col-6 mx-auto\">\r\n            <ul className=\"list-group my-5\">\r\n                <li className=\"list-group-item\">Name: {user.name}</li>\r\n                <li className=\"list-group-item\">UserName: {user.username}</li>\r\n                <li className=\"list-group-item\">Email: {user.email}</li>\r\n            </ul>\r\n            <Link className=\"btn btn-primary\" to=\"/\" >Back To Home</Link>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from './layouts/Navbar'\nimport AddUser from './users/AddUser'\nimport EditUser from './users/EditUser'\nimport User from './users/User'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n    <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/about\" component={About}></Route>\n        <Route exact path=\"/user/add\" component={AddUser}></Route>\n        <Route exact path=\"/user/edit/:id\" component={EditUser}></Route>\n        <Route exact path=\"/user/:id\" component={User}></Route>\n      </Switch>\n    </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}